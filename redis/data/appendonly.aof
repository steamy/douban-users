*2$6SELECT$10*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*7$4EVAL$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;$10$10$1*$250$3200*3$5LPUSH$6userid$3123*3$5LPUSH$6userid$3124*3$5LPUSH$6userid$3125*3$5LPUSH$6userid$3126*3$5lpush$13userid_wanted$3111*3$5lpush$13userid_wanted$3112*3$5lpush$13userid_wanted$3113*2$3DEL$13userid_wanted*2$3DEL$6userid*3$4sadd$6userid$3123*3$4sadd$6userid$3124*3$4sadd$6userid$5hello*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*2$3DEL$6userid*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*2$3DEL$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*3$4SREM$13userid_wanted$11huangxiaoer*3$4SREM$13userid_wanted$9147681591*3$4SREM$13userid_wanted$841745938*3$4SREM$13userid_wanted$7ArchiHY*3$4sadd$4set1$11*3$4sadd$4set1$12*3$4sadd$4set1$13*3$4sadd$4set2$11*3$4sadd$4set2$12*3$4sadd$4set2$15*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*4$10sdiffstore$4set1$4set2$4set1*3$4SREM$4set1$15*3$4sadd$4set1$51,2,3*3$4SREM$4set1$51,2,3*5$4sadd$4set1$11$12$13*4$11sunionstore$4set1$4set2$4set1*3$4SADD$4set2$211*4$10sdiffstore$4set2$4set1$4set2*3$4SADD$4set2$11*3$4SADD$4set2$12*3$4SADD$4set2$211*4$10sdiffstore$4set2$4set1$4set2*3$4SADD$4set2$11*3$4SADD$4set2$12*3$4SREM$4set2$15*3$4SADD$4set2$211*4$10sdiffstore$4set2$4set1$4set2*3$4SREM$4set2$13*3$4SREM$4set2$15*3$4SADD$4set2$11*3$4SADD$4set2$12*3$4SADD$4set2$211*4$10sdiffstore$4set1$4set2$4set2*3$4SADD$4set2$4set1*3$4SREM$4set2$4set1*3$3SET$4set1$5Value*2$3DEL$4set1*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*3$4sadd$4set1$11*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*3$4SADD$4set1$13*4$10sdiffstore$4set1$4set2$4set1*3$4SREM$4set1$12*3$4SREM$4set1$211*3$4SADD$4set1$11*3$4SADD$4set1$13*4$10sdiffstore$4set1$4set2$4set1*3$4SREM$4set1$12*3$4SREM$4set1$211*3$4SADD$4set1$11*3$4SADD$4set1$13*4$10sdiffstore$4set1$4set1$4set2*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*3$4SADD$13userid_wanted$102['NewYorkFION', 'ellenmat', 'liyishu', '69532573', 'lolitalin', 'Thomas.Xie', '81016745', '157609796']*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*2$3DEL$4set2*3$4SREM$4set1$13*3$4SREM$13userid_wanted$102['NewYorkFION', 'ellenmat', 'liyishu', '69532573', 'lolitalin', 'Thomas.Xie', '81016745', '157609796']*3$4SREM$11userid_used$11bedtimepoem*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*3$4SREM$13userid_wanted$841745938*3$4SREM$13userid_wanted$9147681591*3$4SREM$13userid_wanted$7ArchiHY*3$4SREM$13userid_wanted$11huangxiaoer*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*3$4SADD$13userid_wanted$102['NewYorkFION', 'ellenmat', 'liyishu', '69532573', 'lolitalin', 'Thomas.Xie', '81016745', '157609796']*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*3$4SADD$13userid_wanted$102['50820429', '157915331', 'jimmy47', 'ether_D', '88927570', '47149059', 'zha-zha-mu', 'zhangzhongshu']*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*3$4SADD$13userid_wanted$96['mansam', 'chessy_L', 'bigsoga', '133071030', 'sherryneko', '61528730', '49992695', 'nirvana7']*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*3$4SREM$13userid_wanted$11huangxiaoer*3$4SREM$13userid_wanted$9147681591*3$4SREM$13userid_wanted$841745938*3$4SREM$13userid_wanted$7ArchiHY*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*3$4SADD$13userid_wanted$102{'lolitalin', 'liyishu', '81016745', '157609796', 'NewYorkFION', '69532573', 'Thomas.Xie', 'ellenmat'}*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*3$4SREM$13userid_wanted$11huangxiaoer*3$4SREM$13userid_wanted$7ArchiHY*3$4SREM$13userid_wanted$841745938*3$4SREM$13userid_wanted$9147681591*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*3$4SADD$13userid_wanted$102{'81016745', '157609796', '69532573', 'NewYorkFION', 'lolitalin', 'Thomas.Xie', 'liyishu', 'ellenmat'}*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$11NewYorkFION$8ellenmat$7liyishu$869532573$9lolitalin$10Thomas.Xie$881016745$9157609796*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$6mansam$8chessy_L$7bigsoga$9133071030$10sherryneko$861528730$849992695$8nirvana7*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$850820429$9157915331$7jimmy47$7ether_D$888927570$847149059$10zha-zha-mu$13zhangzhongshu*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*3$3DEL$11userid_used$13userid_wanted*7$4SADD$13userid_wanted$9147681591$11bedtimepoem$11huangxiaoer$7ArchiHY$841745938*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$11NewYorkFION$8ellenmat$7liyishu$869532573$9lolitalin$10Thomas.Xie$881016745$9157609796*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$6mansam$8chessy_L$7bigsoga$9133071030$10sherryneko$861528730$849992695$8nirvana7*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$850820429$9157915331$7jimmy47$7ether_D$888927570$847149059$10zha-zha-mu$13zhangzhongshu*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$72229618$8Lu131313$848542803$9138670898$7guierge$6ygdelx$9167049534$9177908500*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*2$3DEL$11userid_used*2$3DEL$13userid_wanted*3$3SET$13userid_wanted$5Value*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*2$3DEL$13userid_wanted*3$4SADD$13userid_wanted$5Value*3$4SADD$13userid_wanted$11bedtimepoem*3$4SREM$13userid_wanted$5Value*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$11NewYorkFION$8ellenmat$7liyishu$869532573$9lolitalin$10Thomas.Xie$881016745$9157609796*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$7joearde$13a_lying_eight$9adieudusk$7faulter$10jiangxulin$8feifeiyu$8cheriemo$74130275*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$12whatever9495$860366987$15qianlishuitiany$9121766451$9malingcat$9148129026$10baiyuanbao$9141209977*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$9144464879$7SICLEON$9suzhenshu$9samlonxxx$3cbd$9miumiu-li$73611827$9114515320*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$9173857546$13lightingdonau$11Floria_Wang$8marvlous$4fink$11bedtimepoem$11carpediem19$9153577591*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$4DanP$10AdrianaYim$12ci_lovecandy$7rochand$860588154$863439633$72680338$10dearbobbie*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$9160728486$9154787416$11YOYOWILDFOX$879049984$7widesky$10MachineGun$8fromsino$5weiwu*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$841249084$9xuduo1989$883067077$6QuinnH$9121429714$13SummerRyanShu$6rei5th$9EthanWine*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$11unarcenciel$10maoyingtao$11cigarflower$4giwi$73942351$4bach$9ratsubery$6kaidou*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$839525069$72538476$4luqy$10chesirecat$15juanyanshusheng$8duanmuyi$14harrypotter999$14xiaxiaokuiguai*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$6starlv$7Flinkie$10rockrujing$8Holborne$9146493209$10chenzixuan$9156107957$9lolitalin*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$854046722$14greentea_lover$6wendan$9lolitalin$7arkdome$9104562976$9colintide$11linshanfilm*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$7neotype$875092294$9143707200$6H1karu$9lolitalin$850926479$9158424005$8loyoyo_O*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*3$6SCRIPT$4load$628local results = {};local cursor = ARGV[1];local pattern = ARGV[2];local matchCount = tonumber(ARGV[3]);local totalCount = tonumber(ARGV[4]);local done = false;local count = 0;repeat    local result = redis.call('SCAN', cursor, 'MATCH', pattern, 'COUNT', matchCount);    cursor = result[1];    local keys = result[2];    for i, k in ipairs(keys) do        count = count + 1;        results[#results + 1] = k;        results[#results + 1] = redis.call('TYPE', k);    end    if cursor == '0' or count >= totalCount then        done = true;    enduntil doneresults[#results + 1] = cursor;return results;*2$3DEL$13userid_wanted*2$3DEL$11userid_used*3$4SADD$13userid_wanted$5Value*3$4SADD$13userid_wanted$11bedtimepoem*3$4SREM$13userid_wanted$5Value*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$11NewYorkFION$8ellenmat$7liyishu$869532573$9lolitalin$10Thomas.Xie$881016745$9157609796*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$4DanP$10AdrianaYim$12ci_lovecandy$7rochand$860588154$863439633$72680338$10dearbobbie*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$7joearde$13a_lying_eight$9adieudusk$7faulter$10jiangxulin$8feifeiyu$8cheriemo$74130275*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$12whatever9495$860366987$15qianlishuitiany$9121766451$9malingcat$9148129026$10baiyuanbao$9141209977*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$9173857546$13lightingdonau$11Floria_Wang$8marvlous$4fink$11bedtimepoem$11carpediem19$9153577591*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used*4$11SUNIONSTORE$11userid_used$11userid_used$13userid_wanted*2$3DEL$13userid_wanted*10$4SADD$13userid_wanted$9144464879$7SICLEON$9suzhenshu$9samlonxxx$3cbd$9miumiu-li$73611827$9114515320*4$10SDIFFSTORE$13userid_wanted$13userid_wanted$11userid_used